# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T10:16:51+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, SecretStr, conint, constr


class AWSAccountIdType(RootModel[str]):
    root: str


class AccessTokenValidityType(RootModel[conint(ge=1, le=86400)]):
    root: conint(ge=1, le=86400)


class AccountTakeoverActionNotifyType(RootModel[bool]):
    root: bool


class AccountTakeoverEventActionType(Enum):
    BLOCK = 'BLOCK'
    MFA_IF_CONFIGURED = 'MFA_IF_CONFIGURED'
    MFA_REQUIRED = 'MFA_REQUIRED'
    NO_ACTION = 'NO_ACTION'


class AddCustomAttributesResponse(BaseModel):
    pass


class AdminConfirmSignUpResponse(BaseModel):
    pass


class AdminCreateUserUnusedAccountValidityDaysType(RootModel[conint(ge=0, le=365)]):
    root: conint(ge=0, le=365)


class AdminDeleteUserAttributesResponse(BaseModel):
    pass


class AdminDisableProviderForUserResponse(BaseModel):
    pass


class AdminDisableUserResponse(BaseModel):
    pass


class AdminEnableUserResponse(BaseModel):
    pass


class AdminLinkProviderForUserResponse(BaseModel):
    pass


class AdminResetUserPasswordResponse(BaseModel):
    pass


class AdminSetUserMFAPreferenceResponse(BaseModel):
    pass


class AdminSetUserPasswordResponse(BaseModel):
    pass


class AdminSetUserSettingsResponse(BaseModel):
    pass


class AdminUpdateAuthEventFeedbackResponse(BaseModel):
    pass


class AdminUpdateDeviceStatusResponse(BaseModel):
    pass


class AdminUpdateUserAttributesResponse(BaseModel):
    pass


class AdminUserGlobalSignOutResponse(BaseModel):
    pass


class AdvancedSecurityModeType(Enum):
    OFF = 'OFF'
    AUDIT = 'AUDIT'
    ENFORCED = 'ENFORCED'


class AliasAttributeType(Enum):
    phone_number = 'phone_number'
    email = 'email'
    preferred_username = 'preferred_username'


class AliasAttributesListType(RootModel[List[AliasAttributeType]]):
    root: List[AliasAttributeType]


class AliasExistsException(RootModel[Any]):
    root: Any


class ArnType(
    RootModel[
        constr(
            pattern=r'arn:[\w+=/,.@-]+:[\w+=/,.@-]+:([\w+=/,.@-]*)?:[0-9]+:[\w+=/,.@-]+(:[\w+=/,.@-]+)?(:[\w+=/,.@-]+)?',
            min_length=20,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:[\w+=/,.@-]+:[\w+=/,.@-]+:([\w+=/,.@-]*)?:[0-9]+:[\w+=/,.@-]+(:[\w+=/,.@-]+)?(:[\w+=/,.@-]+)?',
        min_length=20,
        max_length=2048,
    )


class AttributeDataType(Enum):
    String = 'String'
    Number = 'Number'
    DateTime = 'DateTime'
    Boolean = 'Boolean'


class AttributeMappingKeyType(RootModel[constr(min_length=1, max_length=32)]):
    root: constr(min_length=1, max_length=32)


class AttributeNameType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=32)
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=32)


class AttributeValueType(RootModel[SecretStr]):
    root: SecretStr


class AuthFlowType(Enum):
    USER_SRP_AUTH = 'USER_SRP_AUTH'
    REFRESH_TOKEN_AUTH = 'REFRESH_TOKEN_AUTH'
    REFRESH_TOKEN = 'REFRESH_TOKEN'
    CUSTOM_AUTH = 'CUSTOM_AUTH'
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    USER_PASSWORD_AUTH = 'USER_PASSWORD_AUTH'
    ADMIN_USER_PASSWORD_AUTH = 'ADMIN_USER_PASSWORD_AUTH'


class AuthSessionValidityType(RootModel[conint(ge=3, le=15)]):
    root: conint(ge=3, le=15)


class BooleanType(RootModel[bool]):
    root: bool


class CSSType(RootModel[str]):
    root: str


class CSSVersionType(RootModel[str]):
    root: str


class ChallengeName(Enum):
    Password = 'Password'
    Mfa = 'Mfa'


class ChallengeNameType(Enum):
    SMS_MFA = 'SMS_MFA'
    SOFTWARE_TOKEN_MFA = 'SOFTWARE_TOKEN_MFA'
    SELECT_MFA_TYPE = 'SELECT_MFA_TYPE'
    MFA_SETUP = 'MFA_SETUP'
    PASSWORD_VERIFIER = 'PASSWORD_VERIFIER'
    CUSTOM_CHALLENGE = 'CUSTOM_CHALLENGE'
    DEVICE_SRP_AUTH = 'DEVICE_SRP_AUTH'
    DEVICE_PASSWORD_VERIFIER = 'DEVICE_PASSWORD_VERIFIER'
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    NEW_PASSWORD_REQUIRED = 'NEW_PASSWORD_REQUIRED'


class ChallengeResponse(Enum):
    Success = 'Success'
    Failure = 'Failure'


class ChallengeResponseType(BaseModel):
    ChallengeName_1: Optional[ChallengeName] = Field(None, alias='ChallengeName')
    ChallengeResponse_1: Optional[ChallengeResponse] = Field(
        None, alias='ChallengeResponse'
    )


class ChangePasswordResponse(BaseModel):
    pass


class ClientIdType(RootModel[SecretStr]):
    root: SecretStr


class ClientNameType(
    RootModel[constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)


class ClientPermissionType(RootModel[constr(min_length=1, max_length=2048)]):
    root: constr(min_length=1, max_length=2048)


class ClientSecretType(RootModel[SecretStr]):
    root: SecretStr


class CodeDeliveryFailureException(RootModel[Any]):
    root: Any


class CodeMismatchException(RootModel[Any]):
    root: Any


class CompletionMessageType(
    RootModel[constr(pattern=r'[\w]+', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[\w]+', min_length=1, max_length=128)


class CompromisedCredentialsEventActionType(Enum):
    BLOCK = 'BLOCK'
    NO_ACTION = 'NO_ACTION'


class ConcurrentModificationException(RootModel[Any]):
    root: Any


class ConfirmDeviceResponse(BaseModel):
    UserConfirmationNecessary: Optional[BooleanType] = None


class ConfirmForgotPasswordResponse(BaseModel):
    pass


class ConfirmSignUpResponse(BaseModel):
    pass


class ConfirmationCodeType(
    RootModel[constr(pattern=r'[\S]+', min_length=1, max_length=2048)]
):
    root: constr(pattern=r'[\S]+', min_length=1, max_length=2048)


class CustomAttributeNameType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=20)
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=20)


class CustomDomainConfigType(BaseModel):
    CertificateArn: ArnType


class CustomEmailSenderLambdaVersionType(Enum):
    V1_0 = 'V1_0'


class CustomSMSSenderLambdaVersionType(Enum):
    V1_0 = 'V1_0'


class DateType(RootModel[datetime]):
    root: datetime


class DefaultEmailOptionType(Enum):
    CONFIRM_WITH_LINK = 'CONFIRM_WITH_LINK'
    CONFIRM_WITH_CODE = 'CONFIRM_WITH_CODE'


class DeleteUserAttributesResponse(BaseModel):
    pass


class DeleteUserPoolDomainResponse(BaseModel):
    pass


class DeletionProtectionType(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class DeliveryMediumType(Enum):
    SMS = 'SMS'
    EMAIL = 'EMAIL'


class DescriptionType(RootModel[constr(max_length=2048)]):
    root: constr(max_length=2048)


class DeviceConfigurationType(BaseModel):
    ChallengeRequiredOnNewDevice: Optional[BooleanType] = None
    DeviceOnlyRememberedOnUserPrompt: Optional[BooleanType] = None


class DeviceKeyType(
    RootModel[constr(pattern=r'[\w-]+_[0-9a-f-]+', min_length=1, max_length=55)]
):
    root: constr(pattern=r'[\w-]+_[0-9a-f-]+', min_length=1, max_length=55)


class DeviceNameType(RootModel[constr(min_length=1, max_length=1024)]):
    root: constr(min_length=1, max_length=1024)


class DeviceRememberedStatusType(Enum):
    remembered = 'remembered'
    not_remembered = 'not_remembered'


class DomainStatusType(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    ACTIVE = 'ACTIVE'
    FAILED = 'FAILED'


class DomainType(
    RootModel[
        constr(
            pattern=r'^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$',
            min_length=1,
            max_length=63,
        )
    ]
):
    root: constr(
        pattern=r'^[a-z0-9](?:[a-z0-9\-]{0,61}[a-z0-9])?$', min_length=1, max_length=63
    )


class DomainVersionType(RootModel[constr(min_length=1, max_length=20)]):
    root: constr(min_length=1, max_length=20)


class DuplicateProviderException(RootModel[Any]):
    root: Any


class EmailAddressType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+@[\p{L}\p{M}\p{S}\p{N}\p{P}]+')
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+@[\p{L}\p{M}\p{S}\p{N}\p{P}]+')


class EmailNotificationBodyType(
    RootModel[
        constr(
            pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]+', min_length=6, max_length=20000
        )
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]+', min_length=6, max_length=20000
    )


class EmailNotificationSubjectType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140)
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140
    )


class EmailSendingAccountType(Enum):
    COGNITO_DEFAULT = 'COGNITO_DEFAULT'
    DEVELOPER = 'DEVELOPER'


class EmailVerificationMessageByLinkType(
    RootModel[
        constr(
            pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{##[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*##\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*',
            min_length=6,
            max_length=20000,
        )
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{##[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*##\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*',
        min_length=6,
        max_length=20000,
    )


class EmailVerificationMessageType(
    RootModel[
        constr(
            pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{####\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*',
            min_length=6,
            max_length=20000,
        )
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*\{####\}[\p{L}\p{M}\p{S}\p{N}\p{P}\s*]*',
        min_length=6,
        max_length=20000,
    )


class EmailVerificationSubjectByLinkType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140)
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140
    )


class EmailVerificationSubjectType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140)
    ]
):
    root: constr(
        pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}\s]+', min_length=1, max_length=140
    )


class EnableSoftwareTokenMFAException(RootModel[Any]):
    root: Any


class EventFilterType(Enum):
    SIGN_IN = 'SIGN_IN'
    PASSWORD_CHANGE = 'PASSWORD_CHANGE'
    SIGN_UP = 'SIGN_UP'


class EventFiltersType(RootModel[List[EventFilterType]]):
    root: List[EventFilterType]


class EventIdType(RootModel[constr(pattern=r'[\w+-]+', min_length=1, max_length=50)]):
    root: constr(pattern=r'[\w+-]+', min_length=1, max_length=50)


class EventResponseType(Enum):
    Pass = 'Pass'
    Fail = 'Fail'
    InProgress = 'InProgress'


class EventType(Enum):
    SignIn = 'SignIn'
    SignUp = 'SignUp'
    ForgotPassword = 'ForgotPassword'
    PasswordChange = 'PasswordChange'
    ResendCode = 'ResendCode'


class ExpiredCodeException(RootModel[Any]):
    root: Any


class ExplicitAuthFlowsType(Enum):
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    CUSTOM_AUTH_FLOW_ONLY = 'CUSTOM_AUTH_FLOW_ONLY'
    USER_PASSWORD_AUTH = 'USER_PASSWORD_AUTH'
    ALLOW_ADMIN_USER_PASSWORD_AUTH = 'ALLOW_ADMIN_USER_PASSWORD_AUTH'
    ALLOW_CUSTOM_AUTH = 'ALLOW_CUSTOM_AUTH'
    ALLOW_USER_PASSWORD_AUTH = 'ALLOW_USER_PASSWORD_AUTH'
    ALLOW_USER_SRP_AUTH = 'ALLOW_USER_SRP_AUTH'
    ALLOW_REFRESH_TOKEN_AUTH = 'ALLOW_REFRESH_TOKEN_AUTH'


class FeedbackValueType(Enum):
    Valid = 'Valid'
    Invalid = 'Invalid'


class ForbiddenException(RootModel[Any]):
    root: Any


class ForceAliasCreation(RootModel[bool]):
    root: bool


class GenerateSecret(RootModel[bool]):
    root: bool


class GlobalSignOutResponse(BaseModel):
    pass


class GroupExistsException(RootModel[Any]):
    root: Any


class GroupNameType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=128)
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=128)


class HexStringType(RootModel[constr(pattern=r'^[0-9a-fA-F]+$')]):
    root: constr(pattern=r'^[0-9a-fA-F]+$')


class IdTokenValidityType(RootModel[conint(ge=1, le=86400)]):
    root: conint(ge=1, le=86400)


class IdentityProviderTypeType(Enum):
    SAML = 'SAML'
    Facebook = 'Facebook'
    Google = 'Google'
    LoginWithAmazon = 'LoginWithAmazon'
    SignInWithApple = 'SignInWithApple'
    OIDC = 'OIDC'


class IdpIdentifierType(
    RootModel[constr(pattern=r'[\w\s+=.@-]+', min_length=1, max_length=40)]
):
    root: constr(pattern=r'[\w\s+=.@-]+', min_length=1, max_length=40)


class IdpIdentifiersListType(RootModel[List[IdpIdentifierType]]):
    root: List[IdpIdentifierType] = Field(..., max_length=50, min_length=0)


class ImageFileType(RootModel[str]):
    root: str


class ImageUrlType(RootModel[str]):
    root: str


class IntegerType(RootModel[int]):
    root: int


class InternalErrorException(RootModel[Any]):
    root: Any


class InvalidEmailRoleAccessPolicyException(RootModel[Any]):
    root: Any


class InvalidLambdaResponseException(RootModel[Any]):
    root: Any


class InvalidOAuthFlowException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class InvalidPasswordException(RootModel[Any]):
    root: Any


class InvalidSmsRoleAccessPolicyException(RootModel[Any]):
    root: Any


class InvalidSmsRoleTrustRelationshipException(RootModel[Any]):
    root: Any


class InvalidUserPoolConfigurationException(RootModel[Any]):
    root: Any


class LimitExceededException(RootModel[Any]):
    root: Any


class ListProvidersLimitType(RootModel[conint(ge=0, le=60)]):
    root: conint(ge=0, le=60)


class ListResourceServersLimitType(RootModel[conint(ge=1, le=50)]):
    root: conint(ge=1, le=50)


class ListTagsForResourceRequest(BaseModel):
    ResourceArn: ArnType


class LongType(RootModel[int]):
    root: int


class MFAMethodNotFoundException(RootModel[Any]):
    root: Any


class MFAOptionType(BaseModel):
    AttributeName: Optional[AttributeNameType] = None
    DeliveryMedium: Optional[DeliveryMediumType] = None


class MessageActionType(Enum):
    RESEND = 'RESEND'
    SUPPRESS = 'SUPPRESS'


class NotAuthorizedException(RootModel[Any]):
    root: Any


class NotifyEmailType(BaseModel):
    HtmlBody: Optional[EmailNotificationBodyType] = None
    Subject: EmailNotificationSubjectType
    TextBody: Optional[EmailNotificationBodyType] = None


class OAuthFlowType(Enum):
    code = 'code'
    implicit = 'implicit'
    client_credentials = 'client_credentials'


class OAuthFlowsType(RootModel[List[OAuthFlowType]]):
    root: List[OAuthFlowType] = Field(..., max_length=3, min_length=0)


class PaginationKey(RootModel[constr(pattern=r'[\S]+', min_length=1)]):
    root: constr(pattern=r'[\S]+', min_length=1)


class PaginationKeyType(RootModel[constr(pattern=r'[\S]+', min_length=1)]):
    root: constr(pattern=r'[\S]+', min_length=1)


class PasswordPolicyMinLengthType(RootModel[conint(ge=6, le=99)]):
    root: conint(ge=6, le=99)


class PasswordResetRequiredException(RootModel[Any]):
    root: Any


class PasswordType(RootModel[SecretStr]):
    root: SecretStr


class PoolQueryLimitType(RootModel[conint(ge=1, le=60)]):
    root: conint(ge=1, le=60)


class PreSignedUrlType(RootModel[constr(min_length=0, max_length=2048)]):
    root: constr(min_length=0, max_length=2048)


class PrecedenceType(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class PreconditionNotMetException(RootModel[Any]):
    root: Any


class PreventUserExistenceErrorTypes(Enum):
    LEGACY = 'LEGACY'
    ENABLED = 'ENABLED'


class PriorityType(RootModel[conint(ge=1, le=2)]):
    root: conint(ge=1, le=2)


class ProviderNameType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=32)
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=32)


class ProviderNameTypeV1(
    RootModel[
        constr(
            pattern=r'[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+', min_length=3, max_length=32
        )
    ]
):
    root: constr(
        pattern=r'[^_][\p{L}\p{M}\p{S}\p{N}\p{P}][^_]+', min_length=3, max_length=32
    )


class QueryLimit(RootModel[conint(ge=1, le=60)]):
    root: conint(ge=1, le=60)


class QueryLimitType(RootModel[conint(ge=0, le=60)]):
    root: conint(ge=0, le=60)


class RecoveryOptionNameType(Enum):
    verified_email = 'verified_email'
    verified_phone_number = 'verified_phone_number'
    admin_only = 'admin_only'


class RecoveryOptionType(BaseModel):
    Name: RecoveryOptionNameType
    Priority: PriorityType


class RedirectUrlType(
    RootModel[
        constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=1024)
    ]
):
    root: constr(pattern=r'[\p{L}\p{M}\p{S}\p{N}\p{P}]+', min_length=1, max_length=1024)


class RefreshTokenValidityType(RootModel[conint(ge=0, le=315360000)]):
    root: conint(ge=0, le=315360000)


class RegionCodeType(RootModel[constr(min_length=5, max_length=32)]):
    root: constr(min_length=5, max_length=32)


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class ResourceServerIdentifierType(
    RootModel[
        constr(pattern=r'[\x21\x23-\x5B\x5D-\x7E]+', min_length=1, max_length=256)
    ]
):
    root: constr(pattern=r'[\x21\x23-\x5B\x5D-\x7E]+', min_length=1, max_length=256)


class ResourceServerNameType(
    RootModel[constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=256)]
):
    root: constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=256)


class ResourceServerScopeDescriptionType(
    RootModel[constr(min_length=1, max_length=256)]
):
    root: constr(min_length=1, max_length=256)


class ResourceServerScopeNameType(
    RootModel[
        constr(
            pattern=r'[\x21\x23-\x2E\x30-\x5B\x5D-\x7E]+', min_length=1, max_length=256
        )
    ]
):
    root: constr(
        pattern=r'[\x21\x23-\x2E\x30-\x5B\x5D-\x7E]+', min_length=1, max_length=256
    )


class ResourceServerScopeType(BaseModel):
    ScopeDescription: ResourceServerScopeDescriptionType
    ScopeName: ResourceServerScopeNameType


class RevokeTokenResponse(BaseModel):
    pass


class RiskDecisionType(Enum):
    NoRisk = 'NoRisk'
    AccountTakeover = 'AccountTakeover'
    Block = 'Block'


class RiskLevelType(Enum):
    Low = 'Low'
    Medium = 'Medium'
    High = 'High'


class S3BucketType(
    RootModel[
        constr(pattern=r'^[0-9A-Za-z\.\-_]*(?<!\.)$', min_length=3, max_length=1024)
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(pattern=r'^[0-9A-Za-z\.\-_]*(?<!\.)$', min_length=3, max_length=1024)


class SESConfigurationSet(
    RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=64)


class SMSMfaSettingsType(BaseModel):
    Enabled: Optional[BooleanType] = None
    PreferredMfa: Optional[BooleanType] = None


class ScopeDoesNotExistException(RootModel[Any]):
    root: Any


class ScopeType(
    RootModel[
        constr(pattern=r'[\x21\x23-\x5B\x5D-\x7E]+', min_length=1, max_length=256)
    ]
):
    root: constr(pattern=r'[\x21\x23-\x5B\x5D-\x7E]+', min_length=1, max_length=256)


class SearchPaginationTokenType(RootModel[constr(pattern=r'[\S]+', min_length=1)]):
    root: constr(pattern=r'[\S]+', min_length=1)


class SearchedAttributeNamesListType(RootModel[List[AttributeNameType]]):
    root: List[AttributeNameType]


class SecretCodeType(RootModel[SecretStr]):
    root: SecretStr


class SecretHashType(RootModel[SecretStr]):
    root: SecretStr


class SessionType(RootModel[constr(min_length=20, max_length=2048)]):
    root: constr(min_length=20, max_length=2048)


class SetUserMFAPreferenceResponse(BaseModel):
    pass


class SetUserSettingsResponse(BaseModel):
    pass


class SmsVerificationMessageType(
    RootModel[constr(pattern=r'.*\{####\}.*', min_length=6, max_length=140)]
):
    root: constr(pattern=r'.*\{####\}.*', min_length=6, max_length=140)


class SoftwareTokenMFANotFoundException(RootModel[Any]):
    root: Any


class SoftwareTokenMFAUserCodeType(
    RootModel[constr(pattern=r'[0-9]+', min_length=6, max_length=6)]
):
    root: constr(pattern=r'[0-9]+', min_length=6, max_length=6)


class SoftwareTokenMfaConfigType(BaseModel):
    Enabled: Optional[BooleanType] = None


class SoftwareTokenMfaSettingsType(BaseModel):
    Enabled: Optional[BooleanType] = None
    PreferredMfa: Optional[BooleanType] = None


class StatusType(Enum):
    Enabled = 'Enabled'
    Disabled = 'Disabled'


class StringType(RootModel[str]):
    root: str


class SupportedIdentityProvidersListType(RootModel[List[ProviderNameType]]):
    root: List[ProviderNameType]


class TagKeysType(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagResourceResponse(BaseModel):
    pass


class TagValueType(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class TemporaryPasswordValidityDaysType(RootModel[conint(ge=0, le=365)]):
    root: conint(ge=0, le=365)


class TimeUnitsType(Enum):
    seconds = 'seconds'
    minutes = 'minutes'
    hours = 'hours'
    days = 'days'


class TokenModelType(RootModel[SecretStr]):
    root: SecretStr


class TokenValidityUnitsType(BaseModel):
    AccessToken: Optional[TimeUnitsType] = None
    IdToken: Optional[TimeUnitsType] = None
    RefreshToken: Optional[TimeUnitsType] = None


class TooManyFailedAttemptsException(RootModel[Any]):
    root: Any


class TooManyRequestsException(RootModel[Any]):
    root: Any


class UnauthorizedException(RootModel[Any]):
    root: Any


class UnexpectedLambdaException(RootModel[Any]):
    root: Any


class UnsupportedIdentityProviderException(RootModel[Any]):
    root: Any


class UnsupportedOperationException(RootModel[Any]):
    root: Any


class UnsupportedTokenTypeException(RootModel[Any]):
    root: Any


class UnsupportedUserStateException(RootModel[Any]):
    root: Any


class UntagResourceResponse(BaseModel):
    pass


class UpdateAuthEventFeedbackResponse(BaseModel):
    pass


class UpdateDeviceStatusRequest(BaseModel):
    AccessToken: TokenModelType
    DeviceKey: DeviceKeyType
    DeviceRememberedStatus: Optional[DeviceRememberedStatusType] = None


class UpdateDeviceStatusResponse(BaseModel):
    pass


class UpdateUserPoolDomainResponse(BaseModel):
    CloudFrontDomain: Optional[DomainType] = None


class UpdateUserPoolResponse(BaseModel):
    pass


class UserContextDataType(BaseModel):
    EncodedData: Optional[StringType] = None
    IpAddress: Optional[StringType] = None


class UserFilterType(RootModel[constr(max_length=256)]):
    root: constr(max_length=256)


class UserImportInProgressException(RootModel[Any]):
    root: Any


class UserImportJobIdType(
    RootModel[constr(pattern=r'import-[0-9a-zA-Z-]+', min_length=1, max_length=55)]
):
    root: constr(pattern=r'import-[0-9a-zA-Z-]+', min_length=1, max_length=55)


class UserImportJobNameType(
    RootModel[constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)


class UserImportJobStatusType(Enum):
    Created = 'Created'
    Pending = 'Pending'
    InProgress = 'InProgress'
    Stopping = 'Stopping'
    Expired = 'Expired'
    Stopped = 'Stopped'
    Failed = 'Failed'
    Succeeded = 'Succeeded'


class UserLambdaValidationException(RootModel[Any]):
    root: Any


class UserMFASettingListType(RootModel[List[StringType]]):
    root: List[StringType]


class UserNotConfirmedException(RootModel[Any]):
    root: Any


class UserNotFoundException(RootModel[Any]):
    root: Any


class UserPoolAddOnNotEnabledException(RootModel[Any]):
    root: Any


class UserPoolAddOnsType(BaseModel):
    AdvancedSecurityMode: AdvancedSecurityModeType


class UserPoolIdType(
    RootModel[constr(pattern=r'[\w-]+_[0-9a-zA-Z]+', min_length=1, max_length=55)]
):
    root: constr(pattern=r'[\w-]+_[0-9a-zA-Z]+', min_length=1, max_length=55)


class UserPoolMfaType(Enum):
    OFF = 'OFF'
    ON = 'ON'
    OPTIONAL = 'OPTIONAL'


class UserPoolNameType(
    RootModel[constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)]
):
    root: constr(pattern=r'[\w\s+=,.@-]+', min_length=1, max_length=128)


class UserPoolTaggingException(RootModel[Any]):
    root: Any


class UserPoolTagsListType(RootModel[List[TagKeysType]]):
    root: List[TagKeysType]


class UserPoolTagsType(RootModel[Optional[Dict[str, TagValueType]]]):
    root: Optional[Dict[str, TagValueType]] = None


class UserStatusType(Enum):
    UNCONFIRMED = 'UNCONFIRMED'
    CONFIRMED = 'CONFIRMED'
    ARCHIVED = 'ARCHIVED'
    COMPROMISED = 'COMPROMISED'
    UNKNOWN = 'UNKNOWN'
    RESET_REQUIRED = 'RESET_REQUIRED'
    FORCE_CHANGE_PASSWORD = 'FORCE_CHANGE_PASSWORD'


class UsernameAttributeType(Enum):
    phone_number = 'phone_number'
    email = 'email'


class UsernameAttributesListType(RootModel[List[UsernameAttributeType]]):
    root: List[UsernameAttributeType]


class UsernameExistsException(RootModel[Any]):
    root: Any


class UsernameType(RootModel[SecretStr]):
    root: SecretStr


class VerificationMessageTemplateType(BaseModel):
    DefaultEmailOption: Optional[DefaultEmailOptionType] = None
    EmailMessage: Optional[EmailVerificationMessageType] = None
    EmailMessageByLink: Optional[EmailVerificationMessageByLinkType] = None
    EmailSubject: Optional[EmailVerificationSubjectType] = None
    EmailSubjectByLink: Optional[EmailVerificationSubjectByLinkType] = None
    SmsMessage: Optional[SmsVerificationMessageType] = None


class VerifiedAttributeType(Enum):
    phone_number = 'phone_number'
    email = 'email'


class VerifiedAttributesListType(RootModel[List[VerifiedAttributeType]]):
    root: List[VerifiedAttributeType]


class VerifySoftwareTokenRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    FriendlyDeviceName: Optional[StringType] = None
    Session: Optional[SessionType] = None
    UserCode: SoftwareTokenMFAUserCodeType


class VerifySoftwareTokenResponseType(Enum):
    SUCCESS = 'SUCCESS'
    ERROR = 'ERROR'


class VerifyUserAttributeRequest(BaseModel):
    AccessToken: TokenModelType
    AttributeName: AttributeNameType
    Code: ConfirmationCodeType


class VerifyUserAttributeResponse(BaseModel):
    pass


class WrappedBooleanType(RootModel[bool]):
    root: bool


class XAmzTarget(Enum):
    AWSCognitoIdentityProviderService_AddCustomAttributes = (
        'AWSCognitoIdentityProviderService.AddCustomAttributes'
    )


class XAmzTarget1(Enum):
    AWSCognitoIdentityProviderService_AdminAddUserToGroup = (
        'AWSCognitoIdentityProviderService.AdminAddUserToGroup'
    )


class XAmzTarget2(Enum):
    AWSCognitoIdentityProviderService_AdminConfirmSignUp = (
        'AWSCognitoIdentityProviderService.AdminConfirmSignUp'
    )


class XAmzTarget3(Enum):
    AWSCognitoIdentityProviderService_AdminCreateUser = (
        'AWSCognitoIdentityProviderService.AdminCreateUser'
    )


class XAmzTarget4(Enum):
    AWSCognitoIdentityProviderService_AdminDeleteUser = (
        'AWSCognitoIdentityProviderService.AdminDeleteUser'
    )


class XAmzTarget5(Enum):
    AWSCognitoIdentityProviderService_AdminDeleteUserAttributes = (
        'AWSCognitoIdentityProviderService.AdminDeleteUserAttributes'
    )


class XAmzTarget6(Enum):
    AWSCognitoIdentityProviderService_AdminDisableProviderForUser = (
        'AWSCognitoIdentityProviderService.AdminDisableProviderForUser'
    )


class XAmzTarget7(Enum):
    AWSCognitoIdentityProviderService_AdminDisableUser = (
        'AWSCognitoIdentityProviderService.AdminDisableUser'
    )


class XAmzTarget8(Enum):
    AWSCognitoIdentityProviderService_AdminEnableUser = (
        'AWSCognitoIdentityProviderService.AdminEnableUser'
    )


class XAmzTarget9(Enum):
    AWSCognitoIdentityProviderService_AdminForgetDevice = (
        'AWSCognitoIdentityProviderService.AdminForgetDevice'
    )


class XAmzTarget10(Enum):
    AWSCognitoIdentityProviderService_AdminGetDevice = (
        'AWSCognitoIdentityProviderService.AdminGetDevice'
    )


class XAmzTarget11(Enum):
    AWSCognitoIdentityProviderService_AdminGetUser = (
        'AWSCognitoIdentityProviderService.AdminGetUser'
    )


class XAmzTarget12(Enum):
    AWSCognitoIdentityProviderService_AdminInitiateAuth = (
        'AWSCognitoIdentityProviderService.AdminInitiateAuth'
    )


class XAmzTarget13(Enum):
    AWSCognitoIdentityProviderService_AdminLinkProviderForUser = (
        'AWSCognitoIdentityProviderService.AdminLinkProviderForUser'
    )


class XAmzTarget14(Enum):
    AWSCognitoIdentityProviderService_AdminListDevices = (
        'AWSCognitoIdentityProviderService.AdminListDevices'
    )


class XAmzTarget15(Enum):
    AWSCognitoIdentityProviderService_AdminListGroupsForUser = (
        'AWSCognitoIdentityProviderService.AdminListGroupsForUser'
    )


class XAmzTarget16(Enum):
    AWSCognitoIdentityProviderService_AdminListUserAuthEvents = (
        'AWSCognitoIdentityProviderService.AdminListUserAuthEvents'
    )


class XAmzTarget17(Enum):
    AWSCognitoIdentityProviderService_AdminRemoveUserFromGroup = (
        'AWSCognitoIdentityProviderService.AdminRemoveUserFromGroup'
    )


class XAmzTarget18(Enum):
    AWSCognitoIdentityProviderService_AdminResetUserPassword = (
        'AWSCognitoIdentityProviderService.AdminResetUserPassword'
    )


class XAmzTarget19(Enum):
    AWSCognitoIdentityProviderService_AdminRespondToAuthChallenge = (
        'AWSCognitoIdentityProviderService.AdminRespondToAuthChallenge'
    )


class XAmzTarget20(Enum):
    AWSCognitoIdentityProviderService_AdminSetUserMFAPreference = (
        'AWSCognitoIdentityProviderService.AdminSetUserMFAPreference'
    )


class XAmzTarget21(Enum):
    AWSCognitoIdentityProviderService_AdminSetUserPassword = (
        'AWSCognitoIdentityProviderService.AdminSetUserPassword'
    )


class XAmzTarget22(Enum):
    AWSCognitoIdentityProviderService_AdminSetUserSettings = (
        'AWSCognitoIdentityProviderService.AdminSetUserSettings'
    )


class XAmzTarget23(Enum):
    AWSCognitoIdentityProviderService_AdminUpdateAuthEventFeedback = (
        'AWSCognitoIdentityProviderService.AdminUpdateAuthEventFeedback'
    )


class XAmzTarget24(Enum):
    AWSCognitoIdentityProviderService_AdminUpdateDeviceStatus = (
        'AWSCognitoIdentityProviderService.AdminUpdateDeviceStatus'
    )


class XAmzTarget25(Enum):
    AWSCognitoIdentityProviderService_AdminUpdateUserAttributes = (
        'AWSCognitoIdentityProviderService.AdminUpdateUserAttributes'
    )


class XAmzTarget26(Enum):
    AWSCognitoIdentityProviderService_AdminUserGlobalSignOut = (
        'AWSCognitoIdentityProviderService.AdminUserGlobalSignOut'
    )


class XAmzTarget27(Enum):
    AWSCognitoIdentityProviderService_AssociateSoftwareToken = (
        'AWSCognitoIdentityProviderService.AssociateSoftwareToken'
    )


class XAmzTarget28(Enum):
    AWSCognitoIdentityProviderService_ChangePassword = (
        'AWSCognitoIdentityProviderService.ChangePassword'
    )


class XAmzTarget29(Enum):
    AWSCognitoIdentityProviderService_ConfirmDevice = (
        'AWSCognitoIdentityProviderService.ConfirmDevice'
    )


class XAmzTarget30(Enum):
    AWSCognitoIdentityProviderService_ConfirmForgotPassword = (
        'AWSCognitoIdentityProviderService.ConfirmForgotPassword'
    )


class XAmzTarget31(Enum):
    AWSCognitoIdentityProviderService_ConfirmSignUp = (
        'AWSCognitoIdentityProviderService.ConfirmSignUp'
    )


class XAmzTarget32(Enum):
    AWSCognitoIdentityProviderService_CreateGroup = (
        'AWSCognitoIdentityProviderService.CreateGroup'
    )


class XAmzTarget33(Enum):
    AWSCognitoIdentityProviderService_CreateIdentityProvider = (
        'AWSCognitoIdentityProviderService.CreateIdentityProvider'
    )


class XAmzTarget34(Enum):
    AWSCognitoIdentityProviderService_CreateResourceServer = (
        'AWSCognitoIdentityProviderService.CreateResourceServer'
    )


class XAmzTarget35(Enum):
    AWSCognitoIdentityProviderService_CreateUserImportJob = (
        'AWSCognitoIdentityProviderService.CreateUserImportJob'
    )


class XAmzTarget36(Enum):
    AWSCognitoIdentityProviderService_CreateUserPool = (
        'AWSCognitoIdentityProviderService.CreateUserPool'
    )


class XAmzTarget37(Enum):
    AWSCognitoIdentityProviderService_CreateUserPoolClient = (
        'AWSCognitoIdentityProviderService.CreateUserPoolClient'
    )


class XAmzTarget38(Enum):
    AWSCognitoIdentityProviderService_CreateUserPoolDomain = (
        'AWSCognitoIdentityProviderService.CreateUserPoolDomain'
    )


class XAmzTarget39(Enum):
    AWSCognitoIdentityProviderService_DeleteGroup = (
        'AWSCognitoIdentityProviderService.DeleteGroup'
    )


class XAmzTarget40(Enum):
    AWSCognitoIdentityProviderService_DeleteIdentityProvider = (
        'AWSCognitoIdentityProviderService.DeleteIdentityProvider'
    )


class XAmzTarget41(Enum):
    AWSCognitoIdentityProviderService_DeleteResourceServer = (
        'AWSCognitoIdentityProviderService.DeleteResourceServer'
    )


class XAmzTarget42(Enum):
    AWSCognitoIdentityProviderService_DeleteUser = (
        'AWSCognitoIdentityProviderService.DeleteUser'
    )


class XAmzTarget43(Enum):
    AWSCognitoIdentityProviderService_DeleteUserAttributes = (
        'AWSCognitoIdentityProviderService.DeleteUserAttributes'
    )


class XAmzTarget44(Enum):
    AWSCognitoIdentityProviderService_DeleteUserPool = (
        'AWSCognitoIdentityProviderService.DeleteUserPool'
    )


class XAmzTarget45(Enum):
    AWSCognitoIdentityProviderService_DeleteUserPoolClient = (
        'AWSCognitoIdentityProviderService.DeleteUserPoolClient'
    )


class XAmzTarget46(Enum):
    AWSCognitoIdentityProviderService_DeleteUserPoolDomain = (
        'AWSCognitoIdentityProviderService.DeleteUserPoolDomain'
    )


class XAmzTarget47(Enum):
    AWSCognitoIdentityProviderService_DescribeIdentityProvider = (
        'AWSCognitoIdentityProviderService.DescribeIdentityProvider'
    )


class XAmzTarget48(Enum):
    AWSCognitoIdentityProviderService_DescribeResourceServer = (
        'AWSCognitoIdentityProviderService.DescribeResourceServer'
    )


class XAmzTarget49(Enum):
    AWSCognitoIdentityProviderService_DescribeRiskConfiguration = (
        'AWSCognitoIdentityProviderService.DescribeRiskConfiguration'
    )


class XAmzTarget50(Enum):
    AWSCognitoIdentityProviderService_DescribeUserImportJob = (
        'AWSCognitoIdentityProviderService.DescribeUserImportJob'
    )


class XAmzTarget51(Enum):
    AWSCognitoIdentityProviderService_DescribeUserPool = (
        'AWSCognitoIdentityProviderService.DescribeUserPool'
    )


class XAmzTarget52(Enum):
    AWSCognitoIdentityProviderService_DescribeUserPoolClient = (
        'AWSCognitoIdentityProviderService.DescribeUserPoolClient'
    )


class XAmzTarget53(Enum):
    AWSCognitoIdentityProviderService_DescribeUserPoolDomain = (
        'AWSCognitoIdentityProviderService.DescribeUserPoolDomain'
    )


class XAmzTarget54(Enum):
    AWSCognitoIdentityProviderService_ForgetDevice = (
        'AWSCognitoIdentityProviderService.ForgetDevice'
    )


class XAmzTarget55(Enum):
    AWSCognitoIdentityProviderService_ForgotPassword = (
        'AWSCognitoIdentityProviderService.ForgotPassword'
    )


class XAmzTarget56(Enum):
    AWSCognitoIdentityProviderService_GetCSVHeader = (
        'AWSCognitoIdentityProviderService.GetCSVHeader'
    )


class XAmzTarget57(Enum):
    AWSCognitoIdentityProviderService_GetDevice = (
        'AWSCognitoIdentityProviderService.GetDevice'
    )


class XAmzTarget58(Enum):
    AWSCognitoIdentityProviderService_GetGroup = (
        'AWSCognitoIdentityProviderService.GetGroup'
    )


class XAmzTarget59(Enum):
    AWSCognitoIdentityProviderService_GetIdentityProviderByIdentifier = (
        'AWSCognitoIdentityProviderService.GetIdentityProviderByIdentifier'
    )


class XAmzTarget60(Enum):
    AWSCognitoIdentityProviderService_GetSigningCertificate = (
        'AWSCognitoIdentityProviderService.GetSigningCertificate'
    )


class XAmzTarget61(Enum):
    AWSCognitoIdentityProviderService_GetUICustomization = (
        'AWSCognitoIdentityProviderService.GetUICustomization'
    )


class XAmzTarget62(Enum):
    AWSCognitoIdentityProviderService_GetUser = (
        'AWSCognitoIdentityProviderService.GetUser'
    )


class XAmzTarget63(Enum):
    AWSCognitoIdentityProviderService_GetUserAttributeVerificationCode = (
        'AWSCognitoIdentityProviderService.GetUserAttributeVerificationCode'
    )


class XAmzTarget64(Enum):
    AWSCognitoIdentityProviderService_GetUserPoolMfaConfig = (
        'AWSCognitoIdentityProviderService.GetUserPoolMfaConfig'
    )


class XAmzTarget65(Enum):
    AWSCognitoIdentityProviderService_GlobalSignOut = (
        'AWSCognitoIdentityProviderService.GlobalSignOut'
    )


class XAmzTarget66(Enum):
    AWSCognitoIdentityProviderService_InitiateAuth = (
        'AWSCognitoIdentityProviderService.InitiateAuth'
    )


class XAmzTarget67(Enum):
    AWSCognitoIdentityProviderService_ListDevices = (
        'AWSCognitoIdentityProviderService.ListDevices'
    )


class XAmzTarget68(Enum):
    AWSCognitoIdentityProviderService_ListGroups = (
        'AWSCognitoIdentityProviderService.ListGroups'
    )


class XAmzTarget69(Enum):
    AWSCognitoIdentityProviderService_ListIdentityProviders = (
        'AWSCognitoIdentityProviderService.ListIdentityProviders'
    )


class XAmzTarget70(Enum):
    AWSCognitoIdentityProviderService_ListResourceServers = (
        'AWSCognitoIdentityProviderService.ListResourceServers'
    )


class XAmzTarget71(Enum):
    AWSCognitoIdentityProviderService_ListTagsForResource = (
        'AWSCognitoIdentityProviderService.ListTagsForResource'
    )


class XAmzTarget72(Enum):
    AWSCognitoIdentityProviderService_ListUserImportJobs = (
        'AWSCognitoIdentityProviderService.ListUserImportJobs'
    )


class XAmzTarget73(Enum):
    AWSCognitoIdentityProviderService_ListUserPoolClients = (
        'AWSCognitoIdentityProviderService.ListUserPoolClients'
    )


class XAmzTarget74(Enum):
    AWSCognitoIdentityProviderService_ListUserPools = (
        'AWSCognitoIdentityProviderService.ListUserPools'
    )


class XAmzTarget75(Enum):
    AWSCognitoIdentityProviderService_ListUsers = (
        'AWSCognitoIdentityProviderService.ListUsers'
    )


class XAmzTarget76(Enum):
    AWSCognitoIdentityProviderService_ListUsersInGroup = (
        'AWSCognitoIdentityProviderService.ListUsersInGroup'
    )


class XAmzTarget77(Enum):
    AWSCognitoIdentityProviderService_ResendConfirmationCode = (
        'AWSCognitoIdentityProviderService.ResendConfirmationCode'
    )


class XAmzTarget78(Enum):
    AWSCognitoIdentityProviderService_RespondToAuthChallenge = (
        'AWSCognitoIdentityProviderService.RespondToAuthChallenge'
    )


class XAmzTarget79(Enum):
    AWSCognitoIdentityProviderService_RevokeToken = (
        'AWSCognitoIdentityProviderService.RevokeToken'
    )


class XAmzTarget80(Enum):
    AWSCognitoIdentityProviderService_SetRiskConfiguration = (
        'AWSCognitoIdentityProviderService.SetRiskConfiguration'
    )


class XAmzTarget81(Enum):
    AWSCognitoIdentityProviderService_SetUICustomization = (
        'AWSCognitoIdentityProviderService.SetUICustomization'
    )


class XAmzTarget82(Enum):
    AWSCognitoIdentityProviderService_SetUserMFAPreference = (
        'AWSCognitoIdentityProviderService.SetUserMFAPreference'
    )


class XAmzTarget83(Enum):
    AWSCognitoIdentityProviderService_SetUserPoolMfaConfig = (
        'AWSCognitoIdentityProviderService.SetUserPoolMfaConfig'
    )


class XAmzTarget84(Enum):
    AWSCognitoIdentityProviderService_SetUserSettings = (
        'AWSCognitoIdentityProviderService.SetUserSettings'
    )


class XAmzTarget85(Enum):
    AWSCognitoIdentityProviderService_SignUp = (
        'AWSCognitoIdentityProviderService.SignUp'
    )


class XAmzTarget86(Enum):
    AWSCognitoIdentityProviderService_StartUserImportJob = (
        'AWSCognitoIdentityProviderService.StartUserImportJob'
    )


class XAmzTarget87(Enum):
    AWSCognitoIdentityProviderService_StopUserImportJob = (
        'AWSCognitoIdentityProviderService.StopUserImportJob'
    )


class XAmzTarget88(Enum):
    AWSCognitoIdentityProviderService_TagResource = (
        'AWSCognitoIdentityProviderService.TagResource'
    )


class XAmzTarget89(Enum):
    AWSCognitoIdentityProviderService_UntagResource = (
        'AWSCognitoIdentityProviderService.UntagResource'
    )


class XAmzTarget90(Enum):
    AWSCognitoIdentityProviderService_UpdateAuthEventFeedback = (
        'AWSCognitoIdentityProviderService.UpdateAuthEventFeedback'
    )


class XAmzTarget91(Enum):
    AWSCognitoIdentityProviderService_UpdateDeviceStatus = (
        'AWSCognitoIdentityProviderService.UpdateDeviceStatus'
    )


class XAmzTarget92(Enum):
    AWSCognitoIdentityProviderService_UpdateGroup = (
        'AWSCognitoIdentityProviderService.UpdateGroup'
    )


class XAmzTarget93(Enum):
    AWSCognitoIdentityProviderService_UpdateIdentityProvider = (
        'AWSCognitoIdentityProviderService.UpdateIdentityProvider'
    )


class XAmzTarget94(Enum):
    AWSCognitoIdentityProviderService_UpdateResourceServer = (
        'AWSCognitoIdentityProviderService.UpdateResourceServer'
    )


class XAmzTarget95(Enum):
    AWSCognitoIdentityProviderService_UpdateUserAttributes = (
        'AWSCognitoIdentityProviderService.UpdateUserAttributes'
    )


class XAmzTarget96(Enum):
    AWSCognitoIdentityProviderService_UpdateUserPool = (
        'AWSCognitoIdentityProviderService.UpdateUserPool'
    )


class XAmzTarget97(Enum):
    AWSCognitoIdentityProviderService_UpdateUserPoolClient = (
        'AWSCognitoIdentityProviderService.UpdateUserPoolClient'
    )


class XAmzTarget98(Enum):
    AWSCognitoIdentityProviderService_UpdateUserPoolDomain = (
        'AWSCognitoIdentityProviderService.UpdateUserPoolDomain'
    )


class XAmzTarget99(Enum):
    AWSCognitoIdentityProviderService_VerifySoftwareToken = (
        'AWSCognitoIdentityProviderService.VerifySoftwareToken'
    )


class XAmzTarget100(Enum):
    AWSCognitoIdentityProviderService_VerifyUserAttribute = (
        'AWSCognitoIdentityProviderService.VerifyUserAttribute'
    )


class AccountTakeoverActionType(BaseModel):
    EventAction: AccountTakeoverEventActionType
    Notify: AccountTakeoverActionNotifyType


class AccountTakeoverActionsType(BaseModel):
    HighAction: Optional[AccountTakeoverActionType] = None
    LowAction: Optional[AccountTakeoverActionType] = None
    MediumAction: Optional[AccountTakeoverActionType] = None


class AdminAddUserToGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminDeleteUserRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminDisableUserRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminEnableUserRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminForgetDeviceRequest(BaseModel):
    DeviceKey: DeviceKeyType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminGetDeviceRequest(BaseModel):
    DeviceKey: DeviceKeyType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminGetUserRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminListDevicesRequest(BaseModel):
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminListGroupsForUserRequest(BaseModel):
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminListUserAuthEventsRequest(BaseModel):
    MaxResults: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminRemoveUserFromGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminSetUserMFAPreferenceRequest(BaseModel):
    SMSMfaSettings: Optional[SMSMfaSettingsType] = None
    SoftwareTokenMfaSettings: Optional[SoftwareTokenMfaSettingsType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminSetUserPasswordRequest(BaseModel):
    Password: PasswordType
    Permanent: Optional[BooleanType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminUpdateAuthEventFeedbackRequest(BaseModel):
    EventId: EventIdType
    FeedbackValue: FeedbackValueType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminUpdateDeviceStatusRequest(BaseModel):
    DeviceKey: DeviceKeyType
    DeviceRememberedStatus: Optional[DeviceRememberedStatusType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminUserGlobalSignOutRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AnalyticsConfigurationType(BaseModel):
    ApplicationArn: Optional[ArnType] = None
    ApplicationId: Optional[HexStringType] = None
    ExternalId: Optional[StringType] = None
    RoleArn: Optional[ArnType] = None
    UserDataShared: Optional[BooleanType] = None


class AnalyticsMetadataType(BaseModel):
    AnalyticsEndpointId: Optional[StringType] = None


class AssociateSoftwareTokenRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    Session: Optional[SessionType] = None


class AssociateSoftwareTokenResponse(BaseModel):
    SecretCode: Optional[SecretCodeType] = None
    Session: Optional[SessionType] = None


class AttributeMappingType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class AttributeNameListType(RootModel[List[AttributeNameType]]):
    root: List[AttributeNameType]


class AttributeType(BaseModel):
    Name: AttributeNameType
    Value: Optional[AttributeValueType] = None


class AttributesRequireVerificationBeforeUpdateType(
    RootModel[List[VerifiedAttributeType]]
):
    root: List[VerifiedAttributeType]


class AuthParametersType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class BlockedIPRangeListType(RootModel[List[StringType]]):
    root: List[StringType] = Field(..., max_length=200)


class CallbackURLsListType(RootModel[List[RedirectUrlType]]):
    root: List[RedirectUrlType] = Field(..., max_length=100, min_length=0)


class ChallengeParametersType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class ChallengeResponseListType(RootModel[List[ChallengeResponseType]]):
    root: List[ChallengeResponseType]


class ChallengeResponsesType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class ChangePasswordRequest(BaseModel):
    AccessToken: TokenModelType
    PreviousPassword: PasswordType
    ProposedPassword: PasswordType


class ClientMetadataType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class ClientPermissionListType(RootModel[List[ClientPermissionType]]):
    root: List[ClientPermissionType]


class CodeDeliveryDetailsType(BaseModel):
    AttributeName: Optional[AttributeNameType] = None
    DeliveryMedium: Optional[DeliveryMediumType] = None
    Destination: Optional[StringType] = None


class CompromisedCredentialsActionsType(BaseModel):
    EventAction: CompromisedCredentialsEventActionType


class CompromisedCredentialsRiskConfigurationType(BaseModel):
    Actions: CompromisedCredentialsActionsType
    EventFilter: Optional[EventFiltersType] = None


class ConfirmForgotPasswordRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    ConfirmationCode: ConfirmationCodeType
    Password: PasswordType
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType


class ConfirmSignUpRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    ConfirmationCode: ConfirmationCodeType
    ForceAliasCreation_1: Optional[ForceAliasCreation] = Field(
        None, alias='ForceAliasCreation'
    )
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType


class CreateGroupRequest(BaseModel):
    Description: Optional[DescriptionType] = None
    GroupName: GroupNameType
    Precedence: Optional[PrecedenceType] = None
    RoleArn: Optional[ArnType] = None
    UserPoolId: UserPoolIdType


class CreateUserImportJobRequest(BaseModel):
    CloudWatchLogsRoleArn: ArnType
    JobName: UserImportJobNameType
    UserPoolId: UserPoolIdType


class CreateUserPoolDomainRequest(BaseModel):
    CustomDomainConfig: Optional[CustomDomainConfigType] = None
    Domain: DomainType
    UserPoolId: UserPoolIdType


class CreateUserPoolDomainResponse(BaseModel):
    CloudFrontDomain: Optional[DomainType] = None


class CustomEmailLambdaVersionConfigType(BaseModel):
    LambdaArn: ArnType
    LambdaVersion: CustomEmailSenderLambdaVersionType


class CustomSMSLambdaVersionConfigType(BaseModel):
    LambdaArn: ArnType
    LambdaVersion: CustomSMSSenderLambdaVersionType


class DeleteGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType


class DeleteIdentityProviderRequest(BaseModel):
    ProviderName: ProviderNameType
    UserPoolId: UserPoolIdType


class DeleteResourceServerRequest(BaseModel):
    Identifier: ResourceServerIdentifierType
    UserPoolId: UserPoolIdType


class DeleteUserAttributesRequest(BaseModel):
    AccessToken: TokenModelType
    UserAttributeNames: AttributeNameListType


class DeleteUserPoolClientRequest(BaseModel):
    ClientId: ClientIdType
    UserPoolId: UserPoolIdType


class DeleteUserPoolDomainRequest(BaseModel):
    Domain: DomainType
    UserPoolId: UserPoolIdType


class DeleteUserPoolRequest(BaseModel):
    UserPoolId: UserPoolIdType


class DeleteUserRequest(BaseModel):
    AccessToken: TokenModelType


class DeliveryMediumListType(RootModel[List[DeliveryMediumType]]):
    root: List[DeliveryMediumType]


class DescribeIdentityProviderRequest(BaseModel):
    ProviderName: ProviderNameType
    UserPoolId: UserPoolIdType


class DescribeResourceServerRequest(BaseModel):
    Identifier: ResourceServerIdentifierType
    UserPoolId: UserPoolIdType


class DescribeRiskConfigurationRequest(BaseModel):
    ClientId: Optional[ClientIdType] = None
    UserPoolId: UserPoolIdType


class DescribeUserImportJobRequest(BaseModel):
    JobId: UserImportJobIdType
    UserPoolId: UserPoolIdType


class DescribeUserPoolClientRequest(BaseModel):
    ClientId: ClientIdType
    UserPoolId: UserPoolIdType


class DescribeUserPoolDomainRequest(BaseModel):
    Domain: DomainType


class DescribeUserPoolRequest(BaseModel):
    UserPoolId: UserPoolIdType


class DeviceSecretVerifierConfigType(BaseModel):
    PasswordVerifier: Optional[StringType] = None
    Salt: Optional[StringType] = None


class DomainDescriptionType(BaseModel):
    AWSAccountId: Optional[AWSAccountIdType] = None
    CloudFrontDistribution: Optional[StringType] = None
    CustomDomainConfig: Optional[CustomDomainConfigType] = None
    Domain: Optional[DomainType] = None
    S3Bucket: Optional[S3BucketType] = None
    Status: Optional[DomainStatusType] = None
    UserPoolId: Optional[UserPoolIdType] = None
    Version: Optional[DomainVersionType] = None


class EmailConfigurationType(BaseModel):
    ConfigurationSet: Optional[SESConfigurationSet] = None
    EmailSendingAccount: Optional[EmailSendingAccountType] = None
    From: Optional[StringType] = None
    ReplyToEmailAddress: Optional[EmailAddressType] = None
    SourceArn: Optional[ArnType] = None


class EventContextDataType(BaseModel):
    City: Optional[StringType] = None
    Country: Optional[StringType] = None
    DeviceName: Optional[StringType] = None
    IpAddress: Optional[StringType] = None
    Timezone: Optional[StringType] = None


class EventFeedbackType(BaseModel):
    FeedbackDate: Optional[DateType] = None
    FeedbackValue: FeedbackValueType
    Provider: StringType


class EventRiskType(BaseModel):
    CompromisedCredentialsDetected: Optional[WrappedBooleanType] = None
    RiskDecision: Optional[RiskDecisionType] = None
    RiskLevel: Optional[RiskLevelType] = None


class ExplicitAuthFlowsListType(RootModel[List[ExplicitAuthFlowsType]]):
    root: List[ExplicitAuthFlowsType]


class ForgetDeviceRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    DeviceKey: DeviceKeyType


class ForgotPasswordRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType


class ForgotPasswordResponse(BaseModel):
    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None


class GetCSVHeaderRequest(BaseModel):
    UserPoolId: UserPoolIdType


class GetDeviceRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    DeviceKey: DeviceKeyType


class GetGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType


class GetIdentityProviderByIdentifierRequest(BaseModel):
    IdpIdentifier: IdpIdentifierType
    UserPoolId: UserPoolIdType


class GetSigningCertificateRequest(BaseModel):
    UserPoolId: UserPoolIdType


class GetSigningCertificateResponse(BaseModel):
    Certificate: Optional[StringType] = None


class GetUICustomizationRequest(BaseModel):
    ClientId: Optional[ClientIdType] = None
    UserPoolId: UserPoolIdType


class GetUserAttributeVerificationCodeRequest(BaseModel):
    AccessToken: TokenModelType
    AttributeName: AttributeNameType
    ClientMetadata: Optional[ClientMetadataType] = None


class GetUserAttributeVerificationCodeResponse(BaseModel):
    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None


class GetUserPoolMfaConfigRequest(BaseModel):
    UserPoolId: UserPoolIdType


class GetUserRequest(BaseModel):
    AccessToken: TokenModelType


class GlobalSignOutRequest(BaseModel):
    AccessToken: TokenModelType


class GroupType(BaseModel):
    CreationDate: Optional[DateType] = None
    Description: Optional[DescriptionType] = None
    GroupName: Optional[GroupNameType] = None
    LastModifiedDate: Optional[DateType] = None
    Precedence: Optional[PrecedenceType] = None
    RoleArn: Optional[ArnType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class HttpHeader(BaseModel):
    headerName: Optional[StringType] = None
    headerValue: Optional[StringType] = None


class HttpHeaderList(RootModel[List[HttpHeader]]):
    root: List[HttpHeader]


class InitiateAuthRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    AuthFlow: AuthFlowType
    AuthParameters: Optional[AuthParametersType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None


class LambdaConfigType(BaseModel):
    CreateAuthChallenge: Optional[ArnType] = None
    CustomEmailSender: Optional[CustomEmailLambdaVersionConfigType] = None
    CustomMessage: Optional[ArnType] = None
    CustomSMSSender: Optional[CustomSMSLambdaVersionConfigType] = None
    DefineAuthChallenge: Optional[ArnType] = None
    KMSKeyID: Optional[ArnType] = None
    PostAuthentication: Optional[ArnType] = None
    PostConfirmation: Optional[ArnType] = None
    PreAuthentication: Optional[ArnType] = None
    PreSignUp: Optional[ArnType] = None
    PreTokenGeneration: Optional[ArnType] = None
    UserMigration: Optional[ArnType] = None
    VerifyAuthChallengeResponse: Optional[ArnType] = None


class ListDevicesRequest(BaseModel):
    AccessToken: TokenModelType
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class ListGroupsRequest(BaseModel):
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None
    UserPoolId: UserPoolIdType


class ListIdentityProvidersRequest(BaseModel):
    MaxResults: Optional[ListProvidersLimitType] = None
    NextToken: Optional[PaginationKeyType] = None
    UserPoolId: UserPoolIdType


class ListOfStringTypes(RootModel[List[StringType]]):
    root: List[StringType]


class ListResourceServersRequest(BaseModel):
    MaxResults: Optional[ListResourceServersLimitType] = None
    NextToken: Optional[PaginationKeyType] = None
    UserPoolId: UserPoolIdType


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[UserPoolTagsType] = None


class ListUserImportJobsRequest(BaseModel):
    MaxResults: PoolQueryLimitType
    PaginationToken: Optional[PaginationKeyType] = None
    UserPoolId: UserPoolIdType


class ListUserPoolClientsRequest(BaseModel):
    MaxResults: Optional[QueryLimit] = None
    NextToken: Optional[PaginationKey] = None
    UserPoolId: UserPoolIdType


class ListUserPoolsRequest(BaseModel):
    MaxResults: PoolQueryLimitType
    NextToken: Optional[PaginationKeyType] = None


class ListUsersInGroupRequest(BaseModel):
    GroupName: GroupNameType
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None
    UserPoolId: UserPoolIdType


class ListUsersRequest(BaseModel):
    AttributesToGet: Optional[SearchedAttributeNamesListType] = None
    Filter: Optional[UserFilterType] = None
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None
    UserPoolId: UserPoolIdType


class LogoutURLsListType(RootModel[List[RedirectUrlType]]):
    root: List[RedirectUrlType] = Field(..., max_length=100, min_length=0)


class MFAOptionListType(RootModel[List[MFAOptionType]]):
    root: List[MFAOptionType]


class MessageTemplateType(BaseModel):
    EmailMessage: Optional[EmailVerificationMessageType] = None
    EmailSubject: Optional[EmailVerificationSubjectType] = None
    SMSMessage: Optional[SmsVerificationMessageType] = None


class NewDeviceMetadataType(BaseModel):
    DeviceGroupKey: Optional[StringType] = None
    DeviceKey: Optional[DeviceKeyType] = None


class NotifyConfigurationType(BaseModel):
    BlockEmail: Optional[NotifyEmailType] = None
    From: Optional[StringType] = None
    MfaEmail: Optional[NotifyEmailType] = None
    NoActionEmail: Optional[NotifyEmailType] = None
    ReplyTo: Optional[StringType] = None
    SourceArn: ArnType


class NumberAttributeConstraintsType(BaseModel):
    MaxValue: Optional[StringType] = None
    MinValue: Optional[StringType] = None


class PasswordPolicyType(BaseModel):
    MinimumLength: Optional[PasswordPolicyMinLengthType] = None
    RequireLowercase: Optional[BooleanType] = None
    RequireNumbers: Optional[BooleanType] = None
    RequireSymbols: Optional[BooleanType] = None
    RequireUppercase: Optional[BooleanType] = None
    TemporaryPasswordValidityDays: Optional[TemporaryPasswordValidityDaysType] = None


class ProviderDescription(BaseModel):
    CreationDate: Optional[DateType] = None
    LastModifiedDate: Optional[DateType] = None
    ProviderName: Optional[ProviderNameType] = None
    ProviderType: Optional[IdentityProviderTypeType] = None


class ProviderDetailsType(RootModel[Optional[Dict[str, StringType]]]):
    root: Optional[Dict[str, StringType]] = None


class ProviderUserIdentifierType(BaseModel):
    ProviderAttributeName: Optional[StringType] = None
    ProviderAttributeValue: Optional[StringType] = None
    ProviderName: Optional[ProviderNameType] = None


class ProvidersListType(RootModel[List[ProviderDescription]]):
    root: List[ProviderDescription] = Field(..., max_length=50, min_length=0)


class RecoveryMechanismsType(RootModel[List[RecoveryOptionType]]):
    root: List[RecoveryOptionType] = Field(..., max_length=2, min_length=1)


class ResendConfirmationCodeRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType


class ResendConfirmationCodeResponse(BaseModel):
    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None


class ResourceServerScopeListType(RootModel[List[ResourceServerScopeType]]):
    root: List[ResourceServerScopeType] = Field(..., max_length=100)


class ResourceServerType(BaseModel):
    Identifier: Optional[ResourceServerIdentifierType] = None
    Name: Optional[ResourceServerNameType] = None
    Scopes: Optional[ResourceServerScopeListType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class ResourceServersListType(RootModel[List[ResourceServerType]]):
    root: List[ResourceServerType]


class RespondToAuthChallengeRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ChallengeName: ChallengeNameType
    ChallengeResponses: Optional[ChallengeResponsesType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    Session: Optional[SessionType] = None
    UserContextData: Optional[UserContextDataType] = None


class RevokeTokenRequest(BaseModel):
    ClientId: ClientIdType
    ClientSecret: Optional[ClientSecretType] = None
    Token: TokenModelType


class ScopeListType(RootModel[List[ScopeType]]):
    root: List[ScopeType] = Field(..., max_length=50)


class SetUICustomizationRequest(BaseModel):
    CSS: Optional[CSSType] = None
    ClientId: Optional[ClientIdType] = None
    ImageFile: Optional[ImageFileType] = None
    UserPoolId: UserPoolIdType


class SetUserMFAPreferenceRequest(BaseModel):
    AccessToken: TokenModelType
    SMSMfaSettings: Optional[SMSMfaSettingsType] = None
    SoftwareTokenMfaSettings: Optional[SoftwareTokenMfaSettingsType] = None


class SetUserSettingsRequest(BaseModel):
    AccessToken: TokenModelType
    MFAOptions: MFAOptionListType


class SignUpResponse(BaseModel):
    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None
    UserConfirmed: BooleanType
    UserSub: StringType


class SkippedIPRangeListType(RootModel[List[StringType]]):
    root: List[StringType] = Field(..., max_length=200)


class SmsConfigurationType(BaseModel):
    ExternalId: Optional[StringType] = None
    SnsCallerArn: ArnType
    SnsRegion: Optional[RegionCodeType] = None


class SmsMfaConfigType(BaseModel):
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None


class StartUserImportJobRequest(BaseModel):
    JobId: UserImportJobIdType
    UserPoolId: UserPoolIdType


class StopUserImportJobRequest(BaseModel):
    JobId: UserImportJobIdType
    UserPoolId: UserPoolIdType


class StringAttributeConstraintsType(BaseModel):
    MaxLength: Optional[StringType] = None
    MinLength: Optional[StringType] = None


class TagResourceRequest(BaseModel):
    ResourceArn: ArnType
    Tags: UserPoolTagsType


class UICustomizationType(BaseModel):
    CSS: Optional[CSSType] = None
    CSSVersion: Optional[CSSVersionType] = None
    ClientId: Optional[ClientIdType] = None
    CreationDate: Optional[DateType] = None
    ImageUrl: Optional[ImageUrlType] = None
    LastModifiedDate: Optional[DateType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class UntagResourceRequest(BaseModel):
    ResourceArn: ArnType
    TagKeys: UserPoolTagsListType


class UpdateAuthEventFeedbackRequest(BaseModel):
    EventId: EventIdType
    FeedbackToken: TokenModelType
    FeedbackValue: FeedbackValueType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class UpdateGroupRequest(BaseModel):
    Description: Optional[DescriptionType] = None
    GroupName: GroupNameType
    Precedence: Optional[PrecedenceType] = None
    RoleArn: Optional[ArnType] = None
    UserPoolId: UserPoolIdType


class UpdateGroupResponse(BaseModel):
    Group: Optional[GroupType] = None


class UpdateIdentityProviderRequest(BaseModel):
    AttributeMapping: Optional[AttributeMappingType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None
    ProviderDetails: Optional[ProviderDetailsType] = None
    ProviderName: ProviderNameType
    UserPoolId: UserPoolIdType


class UpdateResourceServerRequest(BaseModel):
    Identifier: ResourceServerIdentifierType
    Name: ResourceServerNameType
    Scopes: Optional[ResourceServerScopeListType] = None
    UserPoolId: UserPoolIdType


class UpdateResourceServerResponse(BaseModel):
    ResourceServer: ResourceServerType


class UpdateUserPoolClientRequest(BaseModel):
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    AuthSessionValidity: Optional[AuthSessionValidityType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    ClientId: ClientIdType
    ClientName: Optional[ClientNameType] = None
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    EnablePropagateAdditionalUserContextData: Optional[WrappedBooleanType] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    IdTokenValidity: Optional[IdTokenValidityType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    UserPoolId: UserPoolIdType
    WriteAttributes: Optional[ClientPermissionListType] = None


class UpdateUserPoolDomainRequest(BaseModel):
    CustomDomainConfig: CustomDomainConfigType
    Domain: DomainType
    UserPoolId: UserPoolIdType


class UserAttributeUpdateSettingsType(BaseModel):
    AttributesRequireVerificationBeforeUpdate: Optional[
        AttributesRequireVerificationBeforeUpdateType
    ] = None


class UserImportJobType(BaseModel):
    CloudWatchLogsRoleArn: Optional[ArnType] = None
    CompletionDate: Optional[DateType] = None
    CompletionMessage: Optional[CompletionMessageType] = None
    CreationDate: Optional[DateType] = None
    FailedUsers: Optional[LongType] = None
    ImportedUsers: Optional[LongType] = None
    JobId: Optional[UserImportJobIdType] = None
    JobName: Optional[UserImportJobNameType] = None
    PreSignedUrl: Optional[PreSignedUrlType] = None
    SkippedUsers: Optional[LongType] = None
    StartDate: Optional[DateType] = None
    Status: Optional[UserImportJobStatusType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class UserImportJobsListType(RootModel[List[UserImportJobType]]):
    root: List[UserImportJobType] = Field(..., max_length=50, min_length=1)


class UserPoolClientDescription(BaseModel):
    ClientId: Optional[ClientIdType] = None
    ClientName: Optional[ClientNameType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class UserPoolClientListType(RootModel[List[UserPoolClientDescription]]):
    root: List[UserPoolClientDescription]


class UserPoolClientType(BaseModel):
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    AuthSessionValidity: Optional[AuthSessionValidityType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    ClientId: Optional[ClientIdType] = None
    ClientName: Optional[ClientNameType] = None
    ClientSecret: Optional[ClientSecretType] = None
    CreationDate: Optional[DateType] = None
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    EnablePropagateAdditionalUserContextData: Optional[WrappedBooleanType] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    IdTokenValidity: Optional[IdTokenValidityType] = None
    LastModifiedDate: Optional[DateType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    UserPoolId: Optional[UserPoolIdType] = None
    WriteAttributes: Optional[ClientPermissionListType] = None


class UserPoolDescriptionType(BaseModel):
    CreationDate: Optional[DateType] = None
    Id: Optional[UserPoolIdType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    LastModifiedDate: Optional[DateType] = None
    Name: Optional[UserPoolNameType] = None
    Status: Optional[StatusType] = None


class UserPoolListType(RootModel[List[UserPoolDescriptionType]]):
    root: List[UserPoolDescriptionType]


class UserPoolPolicyType(BaseModel):
    PasswordPolicy: Optional[PasswordPolicyType] = None


class UsernameConfigurationType(BaseModel):
    CaseSensitive: WrappedBooleanType


class VerifySoftwareTokenResponse(BaseModel):
    Session: Optional[SessionType] = None
    Status: Optional[VerifySoftwareTokenResponseType] = None


class AccountRecoverySettingType(BaseModel):
    RecoveryMechanisms: Optional[RecoveryMechanismsType] = None


class AccountTakeoverRiskConfigurationType(BaseModel):
    Actions: AccountTakeoverActionsType
    NotifyConfiguration: Optional[NotifyConfigurationType] = None


class AdminConfirmSignUpRequest(BaseModel):
    ClientMetadata: Optional[ClientMetadataType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminCreateUserConfigType(BaseModel):
    AllowAdminCreateUserOnly: Optional[BooleanType] = None
    InviteMessageTemplate: Optional[MessageTemplateType] = None
    UnusedAccountValidityDays: Optional[
        AdminCreateUserUnusedAccountValidityDaysType
    ] = None


class AdminDeleteUserAttributesRequest(BaseModel):
    UserAttributeNames: AttributeNameListType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminDisableProviderForUserRequest(BaseModel):
    User: ProviderUserIdentifierType
    UserPoolId: StringType


class AdminLinkProviderForUserRequest(BaseModel):
    DestinationUser: ProviderUserIdentifierType
    SourceUser: ProviderUserIdentifierType
    UserPoolId: StringType


class AdminResetUserPasswordRequest(BaseModel):
    ClientMetadata: Optional[ClientMetadataType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminSetUserSettingsRequest(BaseModel):
    MFAOptions: MFAOptionListType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AttributeListType(RootModel[List[AttributeType]]):
    root: List[AttributeType]


class AuthEventType(BaseModel):
    ChallengeResponses: Optional[ChallengeResponseListType] = None
    CreationDate: Optional[DateType] = None
    EventContextData: Optional[EventContextDataType] = None
    EventFeedback: Optional[EventFeedbackType] = None
    EventId: Optional[StringType] = None
    EventResponse: Optional[EventResponseType] = None
    EventRisk: Optional[EventRiskType] = None
    EventType_1: Optional[EventType] = Field(None, alias='EventType')


class AuthEventsType(RootModel[List[AuthEventType]]):
    root: List[AuthEventType]


class AuthenticationResultType(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    ExpiresIn: Optional[IntegerType] = None
    IdToken: Optional[TokenModelType] = None
    NewDeviceMetadata: Optional[NewDeviceMetadataType] = None
    RefreshToken: Optional[TokenModelType] = None
    TokenType: Optional[StringType] = None


class CodeDeliveryDetailsListType(RootModel[List[CodeDeliveryDetailsType]]):
    root: List[CodeDeliveryDetailsType]


class ConfirmDeviceRequest(BaseModel):
    AccessToken: TokenModelType
    DeviceKey: DeviceKeyType
    DeviceName: Optional[DeviceNameType] = None
    DeviceSecretVerifierConfig: Optional[DeviceSecretVerifierConfigType] = None


class ContextDataType(BaseModel):
    EncodedData: Optional[StringType] = None
    HttpHeaders: HttpHeaderList
    IpAddress: StringType
    ServerName: StringType
    ServerPath: StringType


class CreateGroupResponse(BaseModel):
    Group: Optional[GroupType] = None


class CreateIdentityProviderRequest(BaseModel):
    AttributeMapping: Optional[AttributeMappingType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None
    ProviderDetails: ProviderDetailsType
    ProviderName: ProviderNameTypeV1
    ProviderType: IdentityProviderTypeType
    UserPoolId: UserPoolIdType


class CreateResourceServerRequest(BaseModel):
    Identifier: ResourceServerIdentifierType
    Name: ResourceServerNameType
    Scopes: Optional[ResourceServerScopeListType] = None
    UserPoolId: UserPoolIdType


class CreateResourceServerResponse(BaseModel):
    ResourceServer: ResourceServerType


class CreateUserImportJobResponse(BaseModel):
    UserImportJob: Optional[UserImportJobType] = None


class CreateUserPoolClientRequest(BaseModel):
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    AuthSessionValidity: Optional[AuthSessionValidityType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    ClientName: ClientNameType
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    EnablePropagateAdditionalUserContextData: Optional[WrappedBooleanType] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    GenerateSecret_1: Optional[GenerateSecret] = Field(None, alias='GenerateSecret')
    IdTokenValidity: Optional[IdTokenValidityType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    UserPoolId: UserPoolIdType
    WriteAttributes: Optional[ClientPermissionListType] = None


class CreateUserPoolClientResponse(BaseModel):
    UserPoolClient: Optional[UserPoolClientType] = None


class DescribeResourceServerResponse(BaseModel):
    ResourceServer: ResourceServerType


class DescribeUserImportJobResponse(BaseModel):
    UserImportJob: Optional[UserImportJobType] = None


class DescribeUserPoolClientResponse(BaseModel):
    UserPoolClient: Optional[UserPoolClientType] = None


class DescribeUserPoolDomainResponse(BaseModel):
    DomainDescription: Optional[DomainDescriptionType] = None


class DeviceType(BaseModel):
    DeviceAttributes: Optional[AttributeListType] = None
    DeviceCreateDate: Optional[DateType] = None
    DeviceKey: Optional[DeviceKeyType] = None
    DeviceLastAuthenticatedDate: Optional[DateType] = None
    DeviceLastModifiedDate: Optional[DateType] = None


class GetCSVHeaderResponse(BaseModel):
    CSVHeader: Optional[ListOfStringTypes] = None
    UserPoolId: Optional[UserPoolIdType] = None


class GetDeviceResponse(BaseModel):
    Device: DeviceType


class GetGroupResponse(BaseModel):
    Group: Optional[GroupType] = None


class GetUICustomizationResponse(BaseModel):
    UICustomization: UICustomizationType


class GetUserPoolMfaConfigResponse(BaseModel):
    MfaConfiguration: Optional[UserPoolMfaType] = None
    SmsMfaConfiguration: Optional[SmsMfaConfigType] = None
    SoftwareTokenMfaConfiguration: Optional[SoftwareTokenMfaConfigType] = None


class GetUserResponse(BaseModel):
    MFAOptions: Optional[MFAOptionListType] = None
    PreferredMfaSetting: Optional[StringType] = None
    UserAttributes: AttributeListType
    UserMFASettingList: Optional[UserMFASettingListType] = None
    Username: UsernameType


class GroupListType(RootModel[List[GroupType]]):
    root: List[GroupType]


class IdentityProviderType(BaseModel):
    AttributeMapping: Optional[AttributeMappingType] = None
    CreationDate: Optional[DateType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None
    LastModifiedDate: Optional[DateType] = None
    ProviderDetails: Optional[ProviderDetailsType] = None
    ProviderName: Optional[ProviderNameType] = None
    ProviderType: Optional[IdentityProviderTypeType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class InitiateAuthResponse(BaseModel):
    AuthenticationResult: Optional[AuthenticationResultType] = None
    ChallengeName: Optional[ChallengeNameType] = None
    ChallengeParameters: Optional[ChallengeParametersType] = None
    Session: Optional[SessionType] = None


class ListGroupsResponse(BaseModel):
    Groups: Optional[GroupListType] = None
    NextToken: Optional[PaginationKey] = None


class ListIdentityProvidersResponse(BaseModel):
    NextToken: Optional[PaginationKeyType] = None
    Providers: ProvidersListType


class ListResourceServersResponse(BaseModel):
    NextToken: Optional[PaginationKeyType] = None
    ResourceServers: ResourceServersListType


class ListUserImportJobsResponse(BaseModel):
    PaginationToken: Optional[PaginationKeyType] = None
    UserImportJobs: Optional[UserImportJobsListType] = None


class ListUserPoolClientsResponse(BaseModel):
    NextToken: Optional[PaginationKey] = None
    UserPoolClients: Optional[UserPoolClientListType] = None


class ListUserPoolsResponse(BaseModel):
    NextToken: Optional[PaginationKeyType] = None
    UserPools: Optional[UserPoolListType] = None


class RespondToAuthChallengeResponse(BaseModel):
    AuthenticationResult: Optional[AuthenticationResultType] = None
    ChallengeName: Optional[ChallengeNameType] = None
    ChallengeParameters: Optional[ChallengeParametersType] = None
    Session: Optional[SessionType] = None


class RiskExceptionConfigurationType(BaseModel):
    BlockedIPRangeList: Optional[BlockedIPRangeListType] = None
    SkippedIPRangeList: Optional[SkippedIPRangeListType] = None


class SchemaAttributeType(BaseModel):
    AttributeDataType_1: Optional[AttributeDataType] = Field(
        None, alias='AttributeDataType'
    )
    DeveloperOnlyAttribute: Optional[BooleanType] = None
    Mutable: Optional[BooleanType] = None
    Name: Optional[CustomAttributeNameType] = None
    NumberAttributeConstraints: Optional[NumberAttributeConstraintsType] = None
    Required: Optional[BooleanType] = None
    StringAttributeConstraints: Optional[StringAttributeConstraintsType] = None


class SchemaAttributesListType(RootModel[List[SchemaAttributeType]]):
    root: List[SchemaAttributeType] = Field(..., max_length=50, min_length=1)


class SetRiskConfigurationRequest(BaseModel):
    AccountTakeoverRiskConfiguration: Optional[AccountTakeoverRiskConfigurationType] = (
        None
    )
    ClientId: Optional[ClientIdType] = None
    CompromisedCredentialsRiskConfiguration: Optional[
        CompromisedCredentialsRiskConfigurationType
    ] = None
    RiskExceptionConfiguration: Optional[RiskExceptionConfigurationType] = None
    UserPoolId: UserPoolIdType


class SetUICustomizationResponse(BaseModel):
    UICustomization: UICustomizationType


class SetUserPoolMfaConfigRequest(BaseModel):
    MfaConfiguration: Optional[UserPoolMfaType] = None
    SmsMfaConfiguration: Optional[SmsMfaConfigType] = None
    SoftwareTokenMfaConfiguration: Optional[SoftwareTokenMfaConfigType] = None
    UserPoolId: UserPoolIdType


class SetUserPoolMfaConfigResponse(BaseModel):
    MfaConfiguration: Optional[UserPoolMfaType] = None
    SmsMfaConfiguration: Optional[SmsMfaConfigType] = None
    SoftwareTokenMfaConfiguration: Optional[SoftwareTokenMfaConfigType] = None


class SignUpRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    Password: PasswordType
    SecretHash: Optional[SecretHashType] = None
    UserAttributes: Optional[AttributeListType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType
    ValidationData: Optional[AttributeListType] = None


class StartUserImportJobResponse(BaseModel):
    UserImportJob: Optional[UserImportJobType] = None


class StopUserImportJobResponse(BaseModel):
    UserImportJob: Optional[UserImportJobType] = None


class UpdateIdentityProviderResponse(BaseModel):
    IdentityProvider: IdentityProviderType


class UpdateUserAttributesRequest(BaseModel):
    AccessToken: TokenModelType
    ClientMetadata: Optional[ClientMetadataType] = None
    UserAttributes: AttributeListType


class UpdateUserAttributesResponse(BaseModel):
    CodeDeliveryDetailsList: Optional[CodeDeliveryDetailsListType] = None


class UpdateUserPoolClientResponse(BaseModel):
    UserPoolClient: Optional[UserPoolClientType] = None


class UpdateUserPoolRequest(BaseModel):
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    DeletionProtection: Optional[DeletionProtectionType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    Policies: Optional[UserPoolPolicyType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    UserAttributeUpdateSettings: Optional[UserAttributeUpdateSettingsType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    UserPoolId: UserPoolIdType
    UserPoolTags: Optional[UserPoolTagsType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None


class UserPoolType(BaseModel):
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    AliasAttributes: Optional[AliasAttributesListType] = None
    Arn: Optional[ArnType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    CreationDate: Optional[DateType] = None
    CustomDomain: Optional[DomainType] = None
    DeletionProtection: Optional[DeletionProtectionType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    Domain: Optional[DomainType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    EmailConfigurationFailure: Optional[StringType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    EstimatedNumberOfUsers: Optional[IntegerType] = None
    Id: Optional[UserPoolIdType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    LastModifiedDate: Optional[DateType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    Name: Optional[UserPoolNameType] = None
    Policies: Optional[UserPoolPolicyType] = None
    SchemaAttributes: Optional[SchemaAttributesListType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    SmsConfigurationFailure: Optional[StringType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    Status: Optional[StatusType] = None
    UserAttributeUpdateSettings: Optional[UserAttributeUpdateSettingsType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    UserPoolTags: Optional[UserPoolTagsType] = None
    UsernameAttributes: Optional[UsernameAttributesListType] = None
    UsernameConfiguration: Optional[UsernameConfigurationType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None


class UserType(BaseModel):
    Attributes: Optional[AttributeListType] = None
    Enabled: Optional[BooleanType] = None
    MFAOptions: Optional[MFAOptionListType] = None
    UserCreateDate: Optional[DateType] = None
    UserLastModifiedDate: Optional[DateType] = None
    UserStatus: Optional[UserStatusType] = None
    Username: Optional[UsernameType] = None


class UsersListType(RootModel[List[UserType]]):
    root: List[UserType]


class AdminCreateUserRequest(BaseModel):
    ClientMetadata: Optional[ClientMetadataType] = None
    DesiredDeliveryMediums: Optional[DeliveryMediumListType] = None
    ForceAliasCreation_1: Optional[ForceAliasCreation] = Field(
        None, alias='ForceAliasCreation'
    )
    MessageAction: Optional[MessageActionType] = None
    TemporaryPassword: Optional[PasswordType] = None
    UserAttributes: Optional[AttributeListType] = None
    UserPoolId: UserPoolIdType
    Username: UsernameType
    ValidationData: Optional[AttributeListType] = None


class AdminCreateUserResponse(BaseModel):
    User: Optional[UserType] = None


class AdminGetDeviceResponse(BaseModel):
    Device: DeviceType


class AdminGetUserResponse(BaseModel):
    Enabled: Optional[BooleanType] = None
    MFAOptions: Optional[MFAOptionListType] = None
    PreferredMfaSetting: Optional[StringType] = None
    UserAttributes: Optional[AttributeListType] = None
    UserCreateDate: Optional[DateType] = None
    UserLastModifiedDate: Optional[DateType] = None
    UserMFASettingList: Optional[UserMFASettingListType] = None
    UserStatus: Optional[UserStatusType] = None
    Username: UsernameType


class AdminInitiateAuthRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    AuthFlow: AuthFlowType
    AuthParameters: Optional[AuthParametersType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    ContextData: Optional[ContextDataType] = None
    UserPoolId: UserPoolIdType


class AdminInitiateAuthResponse(BaseModel):
    AuthenticationResult: Optional[AuthenticationResultType] = None
    ChallengeName: Optional[ChallengeNameType] = None
    ChallengeParameters: Optional[ChallengeParametersType] = None
    Session: Optional[SessionType] = None


class AdminListGroupsForUserResponse(BaseModel):
    Groups: Optional[GroupListType] = None
    NextToken: Optional[PaginationKey] = None


class AdminListUserAuthEventsResponse(BaseModel):
    AuthEvents: Optional[AuthEventsType] = None
    NextToken: Optional[PaginationKey] = None


class AdminRespondToAuthChallengeRequest(BaseModel):
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ChallengeName: ChallengeNameType
    ChallengeResponses: Optional[ChallengeResponsesType] = None
    ClientId: ClientIdType
    ClientMetadata: Optional[ClientMetadataType] = None
    ContextData: Optional[ContextDataType] = None
    Session: Optional[SessionType] = None
    UserPoolId: UserPoolIdType


class AdminRespondToAuthChallengeResponse(BaseModel):
    AuthenticationResult: Optional[AuthenticationResultType] = None
    ChallengeName: Optional[ChallengeNameType] = None
    ChallengeParameters: Optional[ChallengeParametersType] = None
    Session: Optional[SessionType] = None


class AdminUpdateUserAttributesRequest(BaseModel):
    ClientMetadata: Optional[ClientMetadataType] = None
    UserAttributes: AttributeListType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class CreateIdentityProviderResponse(BaseModel):
    IdentityProvider: IdentityProviderType


class CreateUserPoolRequest(BaseModel):
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    AliasAttributes: Optional[AliasAttributesListType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    DeletionProtection: Optional[DeletionProtectionType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    Policies: Optional[UserPoolPolicyType] = None
    PoolName: UserPoolNameType
    Schema: Optional[SchemaAttributesListType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    UserAttributeUpdateSettings: Optional[UserAttributeUpdateSettingsType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    UserPoolTags: Optional[UserPoolTagsType] = None
    UsernameAttributes: Optional[UsernameAttributesListType] = None
    UsernameConfiguration: Optional[UsernameConfigurationType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None


class CreateUserPoolResponse(BaseModel):
    UserPool: Optional[UserPoolType] = None


class CustomAttributesListType(RootModel[List[SchemaAttributeType]]):
    root: List[SchemaAttributeType] = Field(..., max_length=25, min_length=1)


class DescribeIdentityProviderResponse(BaseModel):
    IdentityProvider: IdentityProviderType


class DescribeUserPoolResponse(BaseModel):
    UserPool: Optional[UserPoolType] = None


class DeviceListType(RootModel[List[DeviceType]]):
    root: List[DeviceType]


class GetIdentityProviderByIdentifierResponse(BaseModel):
    IdentityProvider: IdentityProviderType


class ListDevicesResponse(BaseModel):
    Devices: Optional[DeviceListType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class ListUsersInGroupResponse(BaseModel):
    NextToken: Optional[PaginationKey] = None
    Users: Optional[UsersListType] = None


class ListUsersResponse(BaseModel):
    PaginationToken: Optional[SearchPaginationTokenType] = None
    Users: Optional[UsersListType] = None


class RiskConfigurationType(BaseModel):
    AccountTakeoverRiskConfiguration: Optional[AccountTakeoverRiskConfigurationType] = (
        None
    )
    ClientId: Optional[ClientIdType] = None
    CompromisedCredentialsRiskConfiguration: Optional[
        CompromisedCredentialsRiskConfigurationType
    ] = None
    LastModifiedDate: Optional[DateType] = None
    RiskExceptionConfiguration: Optional[RiskExceptionConfigurationType] = None
    UserPoolId: Optional[UserPoolIdType] = None


class SetRiskConfigurationResponse(BaseModel):
    RiskConfiguration: RiskConfigurationType


class AddCustomAttributesRequest(BaseModel):
    CustomAttributes: CustomAttributesListType
    UserPoolId: UserPoolIdType


class AdminListDevicesResponse(BaseModel):
    Devices: Optional[DeviceListType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class DescribeRiskConfigurationResponse(BaseModel):
    RiskConfiguration: RiskConfigurationType
